name: Test & Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint
      continue-on-error: true  # Don't fail on lint errors for now

    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        CI: true
        # Set environment variables that tests might need
        NEXT_PUBLIC_PRIVY_APP_ID: test-privy-id
        NEXT_PUBLIC_ALCHEMY_API_KEY: test-alchemy-key
        NEXT_PUBLIC_PINATA_GATEWAY_KEY: test-pinata-key
        NEXT_PUBLIC_POLYGON_AMOY_CONTRACT_ADDRESS: '0x0000000000000000000000000000000000000000'

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: github.event_name == 'push'
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30

    - name: Archive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results/
        retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_PRIVY_APP_ID: ${{ secrets.NEXT_PUBLIC_PRIVY_APP_ID || 'test-privy-id' }}
        NEXT_PUBLIC_ALCHEMY_API_KEY: ${{ secrets.NEXT_PUBLIC_ALCHEMY_API_KEY || 'test-alchemy-key' }}
        NEXT_PUBLIC_PINATA_GATEWAY_KEY: ${{ secrets.NEXT_PUBLIC_PINATA_GATEWAY_KEY || 'test-pinata-key' }}
        NEXT_PUBLIC_POLYGON_AMOY_CONTRACT_ADDRESS: ${{ secrets.NEXT_PUBLIC_POLYGON_AMOY_CONTRACT_ADDRESS || '0x0000000000000000000000000000000000000000' }}

    - name: Archive build output
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-output
        path: |
          .next/
          out/
        retention-days: 7